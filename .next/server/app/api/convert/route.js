"use strict";(()=>{var a={};a.id=931,a.ids=[931],a.modules={261:a=>{a.exports=require("next/dist/shared/lib/router/utils/app-paths")},846:a=>{a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1421:a=>{a.exports=require("node:child_process")},1455:a=>{a.exports=require("node:fs/promises")},1708:a=>{a.exports=require("node:process")},3024:a=>{a.exports=require("node:fs")},3033:a=>{a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3237:a=>{a.exports=import("playwright")},3295:a=>{a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3841:(a,b,c)=>{c.d(b,{bi:()=>r});let d={openai:{name:"OpenAI GPT-4",maxTokens:128e3,costPer1000Tokens:.03,supportsStreaming:!0,rateLimit:{requestsPerMinute:500,tokensPerMinute:15e4}},anthropic:{name:"Anthropic Claude",maxTokens:2e5,costPer1000Tokens:.015,supportsStreaming:!0,rateLimit:{requestsPerMinute:1e3,tokensPerMinute:1e5}}},e={primary:"openai",secondary:"anthropic",maxRetries:3,retryDelay:1e3},f={entityConfidence:.7,relationshipConfidence:.6,minimumContent:100,maxProcessingTime:3e5};class g{constructor(a){this.requestCounts={},this.totalCost=0,this.apiKeys=a,this.initializeRateLimits()}initializeRateLimits(){Object.keys(d).forEach(a=>{this.requestCounts[a]={count:0,resetTime:Date.now()+6e4}})}checkRateLimit(a){let b=this.requestCounts[a],c=Date.now();c>=b.resetTime&&(b.count=0,b.resetTime=c+6e4);let e=d[a].rateLimit.requestsPerMinute;return b.count<e}incrementRateLimit(a){this.requestCounts[a].count++}calculateCost(a,b){return b/1e3*d[a].costPer1000Tokens}async callOpenAI(a){let b=Date.now();if(!this.apiKeys.openai)throw Error("OpenAI API key not configured");let c=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${this.apiKeys.openai}`,"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-4-turbo-preview",messages:[{role:"system",content:a.options?.systemPrompt||"You are a helpful assistant."},{role:"user",content:a.content}],temperature:a.options?.temperature||.1,max_tokens:a.options?.maxTokens||4e3,response_format:a.options?.responseFormat==="json"?{type:"json_object"}:void 0})});if(!c.ok){let a=await c.json();throw Error(`OpenAI API error: ${a.error?.message||"Unknown error"}`)}let d=await c.json(),e=d.usage,f=Date.now()-b,g=this.calculateCost("openai",e.total_tokens);return this.totalCost+=g,{success:!0,provider:"openai",content:d.choices[0].message.content,usage:{promptTokens:e.prompt_tokens,completionTokens:e.completion_tokens,totalTokens:e.total_tokens,estimatedCost:g},processingTime:f}}async callAnthropic(a){let b=Date.now();if(!this.apiKeys.anthropic)throw Error("Anthropic API key not configured");let c=a.options?.systemPrompt||"You are a helpful assistant.",d=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"x-api-key":this.apiKeys.anthropic,"Content-Type":"application/json","anthropic-version":"2023-06-01"},body:JSON.stringify({model:"claude-3-haiku-20240307",max_tokens:a.options?.maxTokens||4e3,temperature:a.options?.temperature||.1,system:c,messages:[{role:"user",content:a.content}]})});if(!d.ok){let a=await d.json();throw Error(`Anthropic API error: ${a.error?.message||"Unknown error"}`)}let e=await d.json(),f=e.usage,g=Date.now()-b,h=this.calculateCost("anthropic",f.input_tokens+f.output_tokens);return this.totalCost+=h,{success:!0,provider:"anthropic",content:e.content[0].text,usage:{promptTokens:f.input_tokens,completionTokens:f.output_tokens,totalTokens:f.input_tokens+f.output_tokens,estimatedCost:h},processingTime:g}}async delay(a){return new Promise(b=>setTimeout(b,a))}async process(a){let b=[e.primary,e.secondary],c=null;for(let d=0;d<e.maxRetries;d++){for(let e of b)try{let b;if(!this.checkRateLimit(e)){console.warn(`Rate limit exceeded for ${e}, trying next provider`);continue}if(!this.apiKeys[e]){console.warn(`API key not available for ${e}, trying next provider`);continue}if(console.log(`Attempting LLM request with ${e} (attempt ${d+1})`),this.incrementRateLimit(e),"openai"===e)b=await this.callOpenAI(a);else if("anthropic"===e)b=await this.callAnthropic(a);else throw Error(`Unsupported provider: ${e}`);return console.log(`LLM request successful with ${e}: ${b.usage.totalTokens} tokens, $${b.usage.estimatedCost.toFixed(4)}`),b}catch(a){if(console.error(`LLM request failed with ${e}:`,(c=a instanceof Error?a:Error("Unknown error")).message),a instanceof Error&&(a.message.includes("rate limit")||a.message.includes("timeout")||a.message.includes("503")||a.message.includes("502")))continue;console.error(`Provider ${e} failed with non-retryable error:`,a)}if(d<e.maxRetries-1){let a=e.retryDelay*Math.pow(2,d);console.log(`All providers failed, retrying in ${a}ms...`),await this.delay(a)}}return{success:!1,provider:"none",content:"",usage:{promptTokens:0,completionTokens:0,totalTokens:0,estimatedCost:0},processingTime:0,error:{code:"ALL_PROVIDERS_FAILED",message:c?.message||"All LLM providers failed after retries",retryable:!1}}}getTotalCost(){return this.totalCost}getUsageStats(){return{totalCost:this.totalCost,requestCounts:{...this.requestCounts},providers:Object.keys(d).map(a=>({available:!!this.apiKeys[a],...d[a]}))}}}let h={system:`You are an expert knowledge analyst specializing in entity extraction from web content. Your task is to identify and classify entities with high precision and confidence scoring.

ENTITY TYPES:
- person: Individual people (names, titles, roles)
- organization: Companies, institutions, groups, teams
- concept: Ideas, methodologies, products, technologies, services
- location: Geographic places, addresses, regions
- technology: Technical tools, programming languages, frameworks, systems

REQUIREMENTS:
1. Extract only clearly identifiable entities with sufficient context
2. Assign confidence scores (0.0-1.0) based on clarity and context
3. Include relevant context snippets that support the entity identification
4. Avoid duplicate or overly generic entities
5. Focus on entities that contribute to understanding relationships and knowledge

RESPONSE FORMAT: Valid JSON only, no additional text.`,user:`Extract entities from this content and return a JSON object with this exact structure:

{
  "entities": [
    {
      "name": "entity name",
      "type": "person|organization|concept|location|technology",
      "confidence": 0.95,
      "context": "surrounding text that supports this entity",
      "sourceSpan": {"start": 123, "end": 145},
      "metadata": {"title": "optional title", "description": "optional description"}
    }
  ],
  "processingNotes": {
    "totalEntitiesFound": 5,
    "averageConfidence": 0.85,
    "qualityAssessment": "high|medium|low"
  }
}

Content to analyze:
---
{{content}}
---`,responseFormat:"json",expectedTokens:1500},i={system:`You are an expert knowledge analyst specializing in relationship detection between entities. Your task is to identify meaningful connections that create valuable knowledge graph insights.

RELATIONSHIP TYPES:
- works_for: Employment, affiliation, membership relationships
- competes_with: Competitive business relationships, market competition
- influences: Impact, inspiration, mentorship, leadership relationships
- related_to: General associations, collaborations, partnerships
- part_of: Hierarchical inclusion, component relationships
- located_in: Geographic or organizational location relationships

REQUIREMENTS:
1. Only identify relationships explicitly supported by the content
2. Assign confidence scores based on evidence strength
3. Include context that demonstrates the relationship
4. Focus on relationships that add knowledge graph value
5. Avoid inferring relationships not clearly stated or implied

RESPONSE FORMAT: Valid JSON only, no additional text.`,user:`Analyze the entities and content to identify relationships. Return a JSON object with this exact structure:

{
  "relationships": [
    {
      "sourceEntity": "entity name 1",
      "targetEntity": "entity name 2", 
      "type": "works_for|competes_with|influences|related_to|part_of|located_in",
      "confidence": 0.85,
      "context": "text evidence supporting this relationship",
      "bidirectional": false
    }
  ],
  "processingNotes": {
    "totalRelationshipsFound": 3,
    "averageConfidence": 0.82,
    "qualityAssessment": "high|medium|low"
  }
}

Entities to analyze:
{{entities}}

Content context:
---
{{content}}
---`,responseFormat:"json",expectedTokens:1e3},j={system:`You are an expert content analyst specializing in knowledge extraction and insight generation. Your task is to provide concise, valuable analysis that supports knowledge graph construction.

ANALYSIS FOCUS:
1. Key insights and takeaways from the content
2. Important themes and concepts discussed
3. Notable patterns or trends mentioned
4. Strategic implications or significance
5. Quality assessment of the source content

REQUIREMENTS:
1. Provide actionable insights, not generic summaries
2. Focus on information valuable for knowledge graph users
3. Maintain factual accuracy and source attribution
4. Assess content quality and reliability indicators
5. Generate insights that complement entity and relationship data

RESPONSE FORMAT: Valid JSON only, no additional text.`,user:`Analyze this content and provide insights. Return a JSON object with this exact structure:

{
  "summary": "concise 2-3 sentence summary of key content",
  "keyInsights": [
    "insight 1: specific finding or pattern",
    "insight 2: strategic implication or significance",
    "insight 3: notable trend or development"
  ],
  "themes": ["theme1", "theme2", "theme3"],
  "quality": {
    "contentReliability": "high|medium|low",
    "informationDensity": "high|medium|low", 
    "sourceCredibility": "high|medium|low",
    "recency": "current|recent|outdated"
  },
  "recommendations": [
    "recommendation for further analysis or follow-up"
  ]
}

Content to analyze:
---
{{content}}
---`,responseFormat:"json",expectedTokens:800};function k(a,b){let c=a.user;return Object.entries(b).forEach(([a,b])=>{let d=`{{${a}}}`;c=c.replace(RegExp(d,"g"),b)}),{system:a.system,user:c}}class l{constructor(a){this.processingStats={totalRequests:0,successfulRequests:0,totalCost:0,totalProcessingTime:0},this.llmClient=a}async processContent(a,b={}){let c=Date.now(),{includeRelationships:d=!0,includeAnalysis:e=!0,confidenceThreshold:g=f.entityConfidence,maxChunks:h=5,timeout:i=f.maxProcessingTime}=b;try{let b=a.replace(/\n{3,}/g,"\n\n").replace(/\s{2,}/g," ").trim();if(b.length<f.minimumContent)throw Error("Content too short for meaningful processing");let i=(function(a,b){let c=[];if(a.length<=24e3)return[a];let d=a.split("\n\n"),e="";for(let a of d)if((e+a).length<=24e3)e+=(e?"\n\n":"")+a;else if(e)c.push(e),e=a;else for(let b of a.split(". "))(e+b).length<=24e3?e+=(e?". ":"")+b:(e&&c.push(e),e=b);return e&&c.push(e),c})(b,0).slice(0,h);console.log(`Processing ${i.length} content chunks...`);let j=[];for(let a=0;a<i.length;a++){console.log(`Extracting entities from chunk ${a+1}/${i.length}`);let b=await this.extractEntities(i[a],g);j.push(...b)}let k=this.deduplicateEntities(j);console.log(`Found ${k.length} unique entities`);let l=[];d&&k.length>=2&&(console.log("Detecting relationships between entities..."),l=await this.detectRelationships(k,b,f.relationshipConfidence),console.log(`Found ${l.length} relationships`));let m="",n=[];if(e){console.log("Generating content analysis...");let a=await this.analyzeContent(b);m=a.summary,n=a.keyInsights,a.quality}let o=Date.now()-c;this.updateStats(o);let p=k.length>0?k.reduce((a,b)=>a+b.confidence,0)/k.length:0;l.length>0&&(l.reduce((a,b)=>a+b.confidence,0),l.length);let q={entities:k,relationships:l,summary:m,keyInsights:n,quality:{contentPreservationRatio:Math.min(k.length/Math.max(2*i.length,1),1),extractionConfidence:p,completenessScore:Math.min((k.length+l.length)/10,1)},processing:{provider:"multi-provider",processingTime:o,totalCost:this.llmClient.getTotalCost(),retryCount:0}};return console.log(`Content processing completed in ${o}ms`),console.log(`Quality: ${(100*q.quality.extractionConfidence).toFixed(1)}% confidence, ${100*q.quality.completenessScore}% completeness`),q}catch(a){return console.error("Content processing failed:",a),{entities:[],relationships:[],summary:"",keyInsights:[],quality:{contentPreservationRatio:0,extractionConfidence:0,completenessScore:0},processing:{provider:"failed",processingTime:Date.now()-c,totalCost:0,retryCount:0}}}}async extractEntities(a,b){let c=k(h,{content:a}),d={content:c.user,taskType:"entity_extraction",options:{systemPrompt:c.system,responseFormat:"json",temperature:.1,maxTokens:2e3}};this.processingStats.totalRequests++;let e=await this.llmClient.process(d);if(!e.success)throw this.processingStats.successfulRequests++,Error(`Entity extraction failed: ${e.error?.message}`);try{let a=(JSON.parse(e.content).entities||[]).filter(a=>a.confidence>=b).map((a,b)=>({id:`entity_${Date.now()}_${b}`,name:a.name,type:a.type,confidence:a.confidence,context:a.context||"",sourceSpan:a.sourceSpan,metadata:a.metadata||{}}));return this.processingStats.successfulRequests++,this.processingStats.totalCost+=e.usage.estimatedCost,a}catch(a){return console.error("Failed to parse entity extraction response:",e.content),[]}}async detectRelationships(a,b,c){let d=k(i,{entities:a.map(a=>`- ${a.name} (${a.type})`).join("\n"),content:b}),e={content:d.user,taskType:"relationship_detection",options:{systemPrompt:d.system,responseFormat:"json",temperature:.1,maxTokens:1500}};this.processingStats.totalRequests++;let f=await this.llmClient.process(e);if(!f.success)return console.warn("Relationship detection failed, continuing without relationships"),[];try{let b=(JSON.parse(f.content).relationships||[]).filter(a=>a.confidence>=c).map((b,c)=>{let d=a.find(a=>a.name===b.sourceEntity),e=a.find(a=>a.name===b.targetEntity);return d&&e?{id:`relationship_${Date.now()}_${c}`,sourceEntityId:d.id,targetEntityId:e.id,type:b.type,confidence:b.confidence,context:b.context||"",metadata:{bidirectional:b.bidirectional||!1}}:null}).filter(Boolean);return this.processingStats.successfulRequests++,this.processingStats.totalCost+=f.usage.estimatedCost,b}catch(a){return console.error("Failed to parse relationship detection response:",f.content),[]}}async analyzeContent(a){let b=k(j,{content:a}),c={content:b.user,taskType:"content_analysis",options:{systemPrompt:b.system,responseFormat:"json",temperature:.2,maxTokens:1e3}};this.processingStats.totalRequests++;let d=await this.llmClient.process(c);if(!d.success)return{summary:"Content analysis unavailable",keyInsights:[],quality:{contentReliability:"unknown"}};try{let a=JSON.parse(d.content);return this.processingStats.successfulRequests++,this.processingStats.totalCost+=d.usage.estimatedCost,{summary:a.summary||"",keyInsights:a.keyInsights||[],quality:a.quality||{contentReliability:"medium"}}}catch(a){return console.error("Failed to parse content analysis response:",d.content),{summary:"Analysis parsing failed",keyInsights:[],quality:{contentReliability:"low"}}}}deduplicateEntities(a){let b=new Map;for(let c of a){let a=`${c.name.toLowerCase()}_${c.type}`,d=b.get(a);(!d||c.confidence>d.confidence)&&b.set(a,c)}return Array.from(b.values())}updateStats(a){this.processingStats.totalProcessingTime+=a}getProcessingStats(){return{...this.processingStats,successRate:this.processingStats.totalRequests>0?this.processingStats.successfulRequests/this.processingStats.totalRequests:0,averageProcessingTime:this.processingStats.successfulRequests>0?this.processingStats.totalProcessingTime/this.processingStats.successfulRequests:0}}}var m=c(1183);class n{async createProcessingJob(a,b,c,d){let e=`llm_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return console.log(`Created LLM processing job ${e} for session ${a}`),e}async updateJobStatus(a,b,c,d){console.log(`Updated job ${a} status to ${b}`),c&&console.log(`Job completed with ${c.entities.length} entities, ${c.relationships.length} relationships`),d&&console.error(`Job ${a} failed:`,d)}async storeProcessingResult(a,b,c){let d=[],e=[];try{if(!await m.z.extractionSession.findUnique({where:{id:b}}))throw Error(`Session ${b} not found`);for(let e of(await m.z.extractionSession.update({where:{id:b},data:{errorMessage:JSON.stringify({llmProcessing:{jobId:a,entities:c.entities.map(a=>({id:a.id,name:a.name,type:a.type,confidence:a.confidence,context:a.context})),relationships:c.relationships.map(a=>({id:a.id,sourceEntityId:a.sourceEntityId,targetEntityId:a.targetEntityId,type:a.type,confidence:a.confidence,context:a.context})),summary:c.summary,keyInsights:c.keyInsights,quality:c.quality,processingTime:c.processing.processingTime,totalCost:c.processing.totalCost}})}}),c.entities))d.push(e.id);for(let a of c.relationships)e.push(a.id);return console.log(`Stored LLM processing results: ${d.length} entities, ${e.length} relationships`),{entityIds:d,relationshipIds:e}}catch(a){throw console.error("Failed to store processing result:",a),a}}async getProcessingJobsBySession(a){try{let b=await m.z.extractionSession.findUnique({where:{id:a}});if(!b?.errorMessage)return[];let c=JSON.parse(b.errorMessage);if(!c.llmProcessing)return[];let d=c.llmProcessing;return[{id:d.jobId,sessionId:a,status:"completed",llmProvider:"multi-provider",contentHash:"temp",processingOptions:{},costCents:Math.round(100*d.totalCost),processingTimeMs:d.processingTime,entityCount:d.entities.length,relationshipCount:d.relationships.length,qualityScore:d.quality.extractionConfidence,createdAt:b.createdAt||new Date,completedAt:b.completedAt||void 0}]}catch(a){return console.error("Failed to get processing jobs:",a),[]}}async getEntitiesByJob(a){try{let b=await m.z.extractionSession.findMany({where:{errorMessage:{contains:a}}});if(0===b.length)return[];let c=b[0],d=JSON.parse(c.errorMessage||"{}");if(!d.llmProcessing?.entities)return[];return d.llmProcessing.entities.map(b=>({id:b.id,jobId:a,name:b.name,type:b.type,confidence:b.confidence,context:b.context,sourceSpan:b.sourceSpan,metadata:b.metadata||{},createdAt:c.createdAt||new Date}))}catch(a){return console.error("Failed to get entities:",a),[]}}async getRelationshipsByJob(a){try{let b=await m.z.extractionSession.findMany({where:{errorMessage:{contains:a}}});if(0===b.length)return[];let c=b[0],d=JSON.parse(c.errorMessage||"{}");if(!d.llmProcessing?.relationships)return[];return d.llmProcessing.relationships.map(b=>({id:b.id,jobId:a,sourceEntityId:b.sourceEntityId,targetEntityId:b.targetEntityId,type:b.type,confidence:b.confidence,context:b.context,bidirectional:b.metadata?.bidirectional||!1,metadata:b.metadata||{},createdAt:c.createdAt||new Date}))}catch(a){return console.error("Failed to get relationships:",a),[]}}async searchEntities(a,b,c){try{let d=await m.z.extractionSession.findMany({where:{errorMessage:{not:null}}}),e=[];for(let f of d)try{let d=JSON.parse(f.errorMessage||"{}");if(d.llmProcessing?.entities){let g=d.llmProcessing.entities.filter(d=>{let e=d.name.toLowerCase().includes(a.toLowerCase())||d.context.toLowerCase().includes(a.toLowerCase()),f=!b||d.type===b,g=!c||d.confidence>=c;return e&&f&&g}).map(a=>({id:a.id,jobId:d.llmProcessing.jobId,name:a.name,type:a.type,confidence:a.confidence,context:a.context,sourceSpan:a.sourceSpan,metadata:a.metadata||{},createdAt:f.createdAt||new Date}));e.push(...g)}}catch(a){continue}return e}catch(a){return console.error("Failed to search entities:",a),[]}}async getProcessingStats(){try{let a=await m.z.extractionSession.findMany({where:{errorMessage:{not:null}}}),b=0,c=0,d=0,e=0,f=0,g=0;for(let h of a)try{let a=JSON.parse(h.errorMessage||"{}");a.llmProcessing&&(b++,c++,d+=a.llmProcessing.entities.length,e+=a.llmProcessing.relationships.length,f+=a.llmProcessing.totalCost,g+=a.llmProcessing.quality.extractionConfidence)}catch(a){continue}return{totalJobs:b,completedJobs:c,totalEntities:d,totalRelationships:e,totalCost:f,averageQuality:c>0?g/c:0}}catch(a){return console.error("Failed to get processing stats:",a),{totalJobs:0,completedJobs:0,totalEntities:0,totalRelationships:0,totalCost:0,averageQuality:0}}}}let o={enabled:!1,minContentLength:500,maxContentLength:5e4,autoProcessDelay:2e3,confidenceThreshold:.7,includeRelationships:!0,includeAnalysis:!0,costLimitCents:1e3};class p{constructor(a={}){this.dailyCostCents=0,this.options={...o,...a},this.dbManager=new n,this.initializeLLMProcessor()}initializeLLMProcessor(){try{let a={openai:process.env.OPENAI_API_KEY||"",anthropic:process.env.ANTHROPIC_API_KEY||""};if(a.openai||a.anthropic){let b=new g(a);this.processor=new l(b),console.log("LLM processor initialized successfully")}else console.warn("No LLM API keys found - automatic processing disabled"),this.options.enabled=!1}catch(a){console.error("Failed to initialize LLM processor:",a),this.options.enabled=!1}}async shouldProcessContent(a){if(!this.options.enabled||!this.processor||a.length<this.options.minContentLength||a.length>this.options.maxContentLength)return!1;let b=Math.round(100*(await this.dbManager.getProcessingStats()).totalCost);if(b>=this.options.costLimitCents)return console.warn(`Daily LLM cost limit reached: ${b}\xa2 >= ${this.options.costLimitCents}\xa2`),!1;if(a.trim().split(/\s+/).length<50)return!1;let c=/[.!?]/.test(a),d=/[A-Z]/.test(a);return c&&d}async processContentIfEligible(a,b,c="unknown"){try{if(!await this.shouldProcessContent(b))return console.log(`Content from ${c} not eligible for LLM processing`),null;if(!this.processor)return console.error("LLM processor not available"),null;console.log(`Auto-processing content from ${c} (${b.length} chars)`),this.options.autoProcessDelay>0&&await new Promise(a=>setTimeout(a,this.options.autoProcessDelay));let d=await this.processor.processContent(b,{includeRelationships:this.options.includeRelationships,includeAnalysis:this.options.includeAnalysis,confidenceThreshold:this.options.confidenceThreshold,maxChunks:3,timeout:6e4}),e=Buffer.from(b).toString("base64").slice(0,32),f=await this.dbManager.createProcessingJob(a,"auto-processor",e,{source:c,autoProcessed:!0});return await this.dbManager.storeProcessingResult(f,a,d),await this.dbManager.updateJobStatus(f,"completed",d),console.log(`Auto-processing completed: ${d.entities.length} entities, ${d.relationships.length} relationships`),console.log(`Processing cost: $${d.processing.totalCost.toFixed(4)}`),d}catch(a){return console.error("Auto-processing failed:",a),null}}async getProcessingSummary(){let a=await this.dbManager.getProcessingStats(),b=Math.round(100*a.totalCost);return{enabled:this.options.enabled,todaysCostCents:b,costLimitCents:this.options.costLimitCents,remainingBudgetCents:Math.max(0,this.options.costLimitCents-b),processingStats:a}}updateOptions(a){this.options={...this.options,...a},a.enabled&&!this.processor&&this.initializeLLMProcessor()}getOptions(){return{...this.options}}}let q=null;function r(){return q||(q=new p({enabled:"true"===process.env.LLM_AUTO_PROCESSING,costLimitCents:parseInt(process.env.LLM_DAILY_COST_LIMIT_CENTS||"1000")})),q}},3873:a=>{a.exports=require("path")},4870:a=>{a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6266:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{handler:()=>x,patchFetch:()=>w,routeModule:()=>y,serverHooks:()=>B,workAsyncStorage:()=>z,workUnitAsyncStorage:()=>A});var e=c(6559),f=c(8088),g=c(7719),h=c(6191),i=c(1289),j=c(261),k=c(2603),l=c(9893),m=c(4823),n=c(7220),o=c(6946),p=c(7912),q=c(9786),r=c(6143),s=c(6439),t=c(3365),u=c(7605),v=a([u]);u=(v.then?(await v)():v)[0];let y=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/convert/route",pathname:"/api/convert",filename:"route",bundlePath:"app/api/convert/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/bartosz/github/stocks_out_for_harambe/src/app/api/convert/route.ts",nextConfigOutput:"standalone",userland:u}),{workAsyncStorage:z,workUnitAsyncStorage:A,serverHooks:B}=y;function w(){return(0,g.patchFetch)({workAsyncStorage:z,workUnitAsyncStorage:A})}async function x(a,b,c){var d;let e="/api/convert/route";"/index"===e&&(e="/");let g=await y.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!x){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||y.isDev||x||(G=D,G="/index"===G?"/":G);let H=!0===y.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>y.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>y.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await y.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await y.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await y.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}d()}catch(a){d(a)}})},6439:a=>{a.exports=require("next/dist/shared/lib/no-fallback-error.external")},6698:a=>{a.exports=require("node:async_hooks")},6760:a=>{a.exports=require("node:path")},7066:a=>{a.exports=require("node:tty")},7361:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{AG:()=>h});var e=c(3237),f=a([e]);e=(f.then?(await f)():f)[0];class i{async initialize(){this.browser||(this.browser=await e.chromium.launch({headless:!0,args:["--no-sandbox","--disable-setuid-sandbox","--disable-dev-shm-usage","--disable-accelerated-2d-canvas","--disable-gpu","--disable-images","--disable-plugins","--disable-extensions"]}),this.context=await this.browser.newContext({userAgent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"}))}async scrapeUrl(a,b={}){let c=Date.now();try{if(await this.initialize(),!this.context)throw Error("Browser context not initialized");let d=await this.context.newPage();d.setDefaultTimeout(b.timeout||15e3);let e=await d.goto(a,{waitUntil:"domcontentloaded",timeout:b.timeout||3e4});if(!e)throw Error("Failed to load page");let f=e.status();if(f>=400)throw Error(`HTTP ${f}: ${e.statusText()}`);b.waitForLoad&&b.waitForLoad>0&&await d.waitForTimeout(b.waitForLoad);let[g,h,i,j]=await Promise.all([d.title().catch(()=>""),d.locator('meta[name="description"]').getAttribute("content").catch(()=>""),this.extractTextContent(d,b),b.includeImages?this.extractImages(d,a):[]]);await d.close();let k=Date.now()-c;return{success:!0,url:a,data:{markdown:i,title:g||void 0,description:h||void 0,images:j.length>0?j:void 0},stats:{processingTime:k,contentSize:i.length,imageCount:j.length},metadata:{timestamp:new Date().toISOString(),httpStatusCode:f,userAgent:b.userAgent||"Knowledge Graph Platform Scraper"}}}catch(g){let d=Date.now()-c,e="SCRAPING_ERROR",f="Unknown scraping error";return g instanceof Error&&(f=g.message,g.message.includes("timeout")?e="TIMEOUT":g.message.includes("HTTP")?e="HTTP_ERROR":g.message.includes("navigation")&&(e="NAVIGATION_ERROR")),{success:!1,url:a,error:{code:e,message:f},stats:{processingTime:d,contentSize:0,imageCount:0},metadata:{timestamp:new Date().toISOString(),userAgent:b.userAgent||"Knowledge Graph Platform Scraper"}}}}async extractTextContent(a,b){try{await a.evaluate(()=>{document.querySelectorAll("script, style, nav, header, footer, aside, .advertisement, .ads, .social-share").forEach(a=>a.remove())});let c="";for(let b of["main","article",'[role="main"]',".content",".main-content",".post-content",".entry-content","body"])try{let d=a.locator(b).first();if(await d.count()>0&&(c=await d.textContent()||"").trim().length>100)break}catch{continue}c.trim().length<100&&(c=await a.locator("body").textContent()||"");let d=this.convertToMarkdown(c,b);if(b.includeTables){let b=await this.extractTables(a);b&&(d+="\n\n"+b)}return d.trim()}catch(a){return console.warn("Text extraction error:",a),"Failed to extract content"}}async extractImages(a,b){try{return(await a.evaluate(a=>{let b=document.querySelectorAll("img[src]"),c=[];return b.forEach(b=>{let d=b.src;if(d&&!d.startsWith("data:"))try{let b=new URL(d,a).href;c.push(b)}catch{}}),[...new Set(c)]},b)).slice(0,20)}catch(a){return console.warn("Image extraction error:",a),[]}}async extractTables(a){try{return await a.evaluate(()=>{let a=document.querySelectorAll("table"),b="";return a.forEach((a,c)=>{let d=a.querySelectorAll("tr");0!==d.length&&(b+=`

### Table ${c+1}

`,d.forEach((a,c)=>{let d=a.querySelectorAll("th, td"),e=Array.from(d).map(a=>a.textContent?.trim()||"");e.length>0&&(b+="| "+e.join(" | ")+" |\n",0===c&&(b+="| "+e.map(()=>"---").join(" | ")+" |\n"))}))}),b})}catch(a){return console.warn("Table extraction error:",a),""}}convertToMarkdown(a,b){let c=a;return c=(c=c.replace(/\s+/g," ").trim()).split(/\n\s*\n/).filter(a=>a.trim().length>0).map(a=>{let b=a.trim();return b.length,b}).join("\n\n"),b.removeCodeBlocks&&(c=(c=c.replace(/```[\s\S]*?```/g,"")).replace(/`[^`]+`/g,"")),c}async close(){this.context&&(await this.context.close(),this.context=null),this.browser&&(await this.browser.close(),this.browser=null)}constructor(){this.browser=null,this.context=null}}let j=null;async function g(){return j||(j=new i,await j.initialize()),j}async function h(a,b={}){return(await g()).scrapeUrl(a,b)}process.on("exit",()=>{j&&j.close().catch(console.error)}),process.on("SIGINT",async()=>{j&&await j.close(),process.exit(0)}),process.on("SIGTERM",async()=>{j&&await j.close(),process.exit(0)}),d()}catch(a){d(a)}})},7598:a=>{a.exports=require("node:crypto")},7605:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{POST:()=>j});var e=c(2190),f=c(1183),g=c(7361),h=c(3841),i=a([g]);async function j(a){let b=Date.now(),c=`convert-${Date.now()}`;try{let d,i=await a.json();if(!i.url)return e.NextResponse.json({success:!1,error:{code:"INVALID_REQUEST",message:"URL is required"}},{status:400});try{d=new URL(i.url)}catch{return e.NextResponse.json({success:!1,error:{code:"INVALID_URL",message:"Invalid URL format"}},{status:400})}let j={includeImages:!0,includeTables:!0,removeCodeBlocks:!1,waitForLoad:2e3,...i.options},k=await (0,g.AG)(i.url,{includeImages:j.includeImages,includeTables:j.includeTables,removeCodeBlocks:j.removeCodeBlocks,waitForLoad:j.waitForLoad,timeout:3e4,userAgent:a.headers.get("user-agent")||"Knowledge Graph Platform"});if(!k.success)return e.NextResponse.json({success:!1,error:{code:k.error?.code||"SCRAPING_FAILED",message:k.error?.message||"Failed to scrape content"},meta:{timestamp:new Date().toISOString(),requestId:c}},{status:500});let l=k.stats.processingTime,m=await f.z.extractionSession.create({data:{userId:"dev-user",sessionName:`Single extraction: ${d.hostname}`,sourceUrl:i.url,totalUrls:1,successfulUrls:1,failedUrls:0,processingTimeMs:BigInt(l),status:"completed",chunkSize:1,maxRetries:3,startedAt:new Date(b),completedAt:new Date}});await f.z.urlExtraction.create({data:{sessionId:m.id,url:i.url,chunkNumber:1,sequenceNumber:1,status:"success",httpStatusCode:k.metadata.httpStatusCode||200,contentSizeBytes:BigInt(k.stats.contentSize),processingTimeMs:l,markdownContent:k.data?.markdown||"",title:k.data?.title||`Content from ${d.hostname}`,description:k.data?.description||`Extracted content from ${i.url}`,imagesCount:k.stats.imageCount,retryCount:0,processedAt:new Date}});let n=null;if(i.options?.enableLLMProcessing&&k.data?.markdown)try{console.log("Starting LLM processing for extracted content...");let a=(0,h.bi)();i.options.llmOptions&&a.updateOptions({enabled:!0,includeRelationships:i.options.llmOptions.includeRelationships??!0,includeAnalysis:i.options.llmOptions.includeAnalysis??!0,confidenceThreshold:i.options.llmOptions.confidenceThreshold??.7}),(n=await a.processContentIfEligible(m.id,k.data.markdown,`convert-api-${d.hostname}`))?console.log(`LLM processing completed: ${n.entities.length} entities, ${n.relationships.length} relationships`):console.log("Content not eligible for LLM processing or processing failed")}catch(a){console.error("LLM processing failed:",a)}let o={success:!0,url:i.url,data:{markdown:k.data?.markdown||"",title:k.data?.title,description:k.data?.description,images:k.data?.images},stats:{processingTime:l,contentSize:k.stats.contentSize,imageCount:k.stats.imageCount},metadata:{timestamp:new Date().toISOString(),userAgent:a.headers.get("user-agent")||"Unknown",responseTime:l},llmProcessing:{enabled:i.options?.enableLLMProcessing||!1,...n&&{jobId:`llm_${m.id}`,entities:n.entities.map(a=>({name:a.name,type:a.type,confidence:a.confidence})),relationships:n.relationships.map(a=>{let b=n.entities.find(b=>b.id===a.sourceEntityId),c=n.entities.find(b=>b.id===a.targetEntityId);return{sourceEntity:b?.name||"Unknown",targetEntity:c?.name||"Unknown",type:a.type,confidence:a.confidence}}),summary:n.summary,keyInsights:n.keyInsights,processingTime:n.processing.processingTime,totalCost:n.processing.totalCost}}};return e.NextResponse.json({success:!0,data:o,meta:{timestamp:new Date().toISOString(),requestId:c,sessionId:m.id}})}catch(a){return console.error("Content conversion error:",a),e.NextResponse.json({success:!1,error:{code:"EXTRACTION_FAILED",message:a instanceof Error?a.message:"Content extraction failed"},meta:{timestamp:new Date().toISOString(),requestId:c}},{status:500})}}g=(i.then?(await i)():i)[0],d()}catch(a){d(a)}})},7975:a=>{a.exports=require("node:util")},8161:a=>{a.exports=require("node:os")},8474:a=>{a.exports=require("node:events")},9021:a=>{a.exports=require("fs")},9294:a=>{a.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[985,55,275],()=>b(b.s=6266));module.exports=c})();