version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: synthora-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: synthora_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - synthora-network

  # Redis (for caching - optional)
  redis:
    image: redis:7-alpine
    container_name: synthora-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - synthora-network

  # Go Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: synthora-backend
    environment:
      - GIN_MODE=debug
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=synthora_dev
      - DB_SSL_MODE=disable
      - REDIS_URL=redis:6379
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
      - go_cache:/go/pkg/mod
    working_dir: /app
    command: go run cmd/server/main.go
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - synthora-network
    restart: unless-stopped

  # PgAdmin (Database Administration Tool - optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: synthora-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@synthora.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - synthora-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  go_cache:
    driver: local

networks:
  synthora-network:
    driver: bridge