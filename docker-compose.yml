# Docker Compose for Synthora production-like deployment (Compose V2; no version key)
# Next.js application with API routes on port 3000
# Firecrawl service: Node on port 3001
# Postgres for data persistence

services:
  postgres:
    image: postgres:15-alpine
    container_name: synthora-postgres
    platform: linux/arm64
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-synthora_prod}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./firecrawl-service/database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - synthora-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-synthora_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5

  firecrawl-service:
    container_name: firecrawl-service
    platform: linux/arm64
    build:
      context: ./firecrawl-service
      dockerfile: Dockerfile
    image: firecrawl-service:latest
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-secure-jwt-secret-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3030,http://localhost:5173}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CACHE_TTL_SECONDS=3600
      - PLAYWRIGHT_TIMEOUT=30000
      - PLAYWRIGHT_MAX_CONCURRENT=3
      - CONTENT_MAX_SIZE_MB=10
      - CONTENT_MAX_TIMEOUT_MS=60000
      # Database configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-synthora_prod}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REQUIRE_DATABASE=false
      # Playwright ARM64 configuration
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true
      - PLAYWRIGHT_BROWSERS_PATH=/usr/bin
      - PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=/usr/bin/chromium-browser
    ports:
      - "${FIRECRAWL_PORT:-3001}:3001"
    networks:
      - synthora-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nextjs-app:
    container_name: synthora-nextjs
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.nextjs
    image: synthora-nextjs:latest
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-synthora_prod}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
    ports:
      - "${NEXTJS_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      firecrawl-service:
        condition: service_healthy
    networks:
      - synthora-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

networks:
  synthora-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  firecrawl_logs:
    driver: local
  firecrawl_temp:
    driver: local